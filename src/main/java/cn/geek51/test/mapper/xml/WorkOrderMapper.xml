<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.geek51.test.mapper.WorkOrderMapper">
    <insert id="insertBatch" parameterType="cn.geek51.test.entity.WorkOrderDto">
        insert into work_order(order_uuid,order_number,depart_uuid,product_uuid,color,sku_name,number,process_number,employee_number,money,create_at)
        values
        <foreach collection="orderList" index="index" item="item" separator=",">
            (#{item.orderUuid},#{orderNumber},#{departUuid},#{productUuid},#{color},#{skuName},#{number},#{item.processNumber},#{item.employeeNumber},#{item.money},now())
        </foreach>
    </insert>
    <select id="employeeSalaryList" resultType="cn.geek51.test.entity.EmployeeSalary">
        SELECT employee_number,SUM(money) wage FROM work_order GROUP BY employee_number
    </select>
    <select id="productSalaryList" resultType="cn.geek51.test.entity.ProductSalary">
		SELECT
			t1.product_uuid,
			t2.totalNumber,
			SUM( t1.money ) toatlMoney
		FROM
			work_order t1,
			(
			SELECT
				product_uuid,
				SUM( t.number ) totalNumber
			FROM
				(
				SELECT
					GROUP_CONCAT( DISTINCT product_uuid ) AS product_uuid,
					GROUP_CONCAT( DISTINCT depart_uuid ) AS depart_uuid,
					GROUP_CONCAT( DISTINCT number ) AS number
				FROM
					work_order
				GROUP BY
					product_uuid,
					depart_uuid,
					number
				) t
			GROUP BY
				product_uuid
			) t2
		WHERE
			t1.product_uuid = t2.product_uuid
		GROUP BY
			t1.product_uuid
    </select>
</mapper>
